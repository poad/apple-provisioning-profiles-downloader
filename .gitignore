# Dependency directory
node_modules

# Rest pulled from https://github.com/github/gitignore/blob/master/Node.gitignore
# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*

# Diagnostic reports (https://nodejs.org/api/report.html)
report.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Directory for instrumented libs generated by jscoverage/JSCover
lib-cov

# Coverage directory used by tools like istanbul
coverage
*.lcov

# nyc test coverage
.nyc_output

# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)
.grunt

# Bower dependency directory (https://bower.io/)
bower_components

# node-waf configuration
.lock-wscript

# Compiled binary addons (https://nodejs.org/api/addons.html)
build/Release

# Dependency directories
jspm_packages/

# TypeScript v1 declaration files
typings/

# TypeScript cache
*.tsbuildinfo

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variables file
.env
.env.test

# OS metadata
.DS_Store
Thumbs.db

# Ignore built ts files
__tests__/runner/*
lib/**/*.map

!node_modules/.bin
!node_modules/@actions
!node_modules/@types
!node_modules/appstore-connect-jwt-generator-core
!node_modules/buffer-equal-constant-time
!node_modules/cross-fetch
!node_modules/date-format
!node_modules/ecdsa-sig-formatter
!node_modules/esm
!node_modules/flatted
!node_modules/fs-extra
!node_modules/graceful-fs
!node_modules/jsonfile
!node_modules/jsonwebtoken
!node_modules/jwa
!node_modules/jws
!node_modules/lodash.includes
!node_modules/lodash.isboolean
!node_modules/lodash.isinteger
!node_modules/lodash.isnumber
!node_modules/lodash.isplainobject
!node_modules/lodash.isstring
!node_modules/lodash.once
!node_modules/log4js
!node_modules/ms
!node_modules/node-fetch
!node_modules/rfdc
!node_modules/safe-buffer
!node_modules/streamroller
!node_modules/tunnel
!node_modules/universalify
